openapi: 3.0.1
servers:
  - url: 'https://api.cast.ai/'
info:
  title: CAST.AI API documentation
  version: 1.0.0
  description: |
    ### Feature maturity indicators (may appear on resources, operations and request/response fields)
     - **(BETA)** - new or experimental features, subject to change
     - **(Deprecated)** - outdated or replaced features (a reason and removal date will be provided in the description)
tags:
  - name: audit
    description: (BETA) Audit of the current account.
  - name: auth
    description: User authentication
  - name: auth-tokens
    description: (BETA) User authentication tokens
  - name: chargebee
    description: utility endpoints for chargebee integration
  - name: initial-cluster-costs
    description: (BETA) Initial Cluster Costs Plan
  - name: cloud-credentials
    description: Cloud credentials
  - name: external-kubernetes
    description: Remotely managed Kubernetes clusters
  - name: gslb
    description: (BETA) GSLB
  - name: inventory
    description: (BETA) Inventory API
  - name: cluster-policies
    description: (BETA) Cluster policies
  - name: kubernetes-cluster
    description: Kubernetes cluster
  - name: regions
    description: (BETA) Regions
  - name: report
    description: (BETA) Reports of current user's organization.
  - name: users
    description: Users
security:
  - BearerAuth: []
  - ApiKeyAuth: []
paths:
  /audit:
    get:
      operationId: list-audit-events
      tags:
        - audit
      summary: >-
        (BETA) List audit events
      description: >-
        Lists all audit events for current account.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/filterFromDate'
        - $ref: '#/components/parameters/filterToDate'
        - $ref: '#/components/parameters/filterClusterId'
      responses:
        "200":
          description: Event list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventList'
  /auth:
    post:
      operationId: login
      tags:
        - auth
      summary: >-
        Login
      description: >-
        Redirect browser to AUTH0 login flow, where user authenticates, browser receives authentication cookie, and then user's browser gets redirected to provided `returnTo` URL. From that point on, all API calls don't require additional headers as HTTP-only cookie will be attached to each request.
      parameters:
        - $ref: '#/components/parameters/returnTo'
        - name: auth0returnTo
          in: query
          schema:
            type: string
          description: optional override for URL to redirect browser from auth0 back to backend, for situations where backend is being reached via proxy
        - name: screenHint
          in: query
          schema:
            type: string
          description: optional hint for which screen to use when redirecting to authentication pages.
      responses:
        "302":
          description: redirects to login page
    get:
      operationId: login-callback
      tags:
        - auth
      summary: >-
        Login callback
      description: >-
        Callback endpoint where login flow returns after authentication succeeds on auth0. Not to be called directly.
      responses:
        "302":
          description: redirects to `returnTo` that was provided with initial auth request.
  /auth/session:
    get:
      operationId: get-session
      tags:
        - auth
      summary: >-
        Current login session info
      description: >-
        As JS has no access to JWT token, this provides a subset of information about user session.
      responses:
        "200":
          description: User is currently logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        "401":
          description: not logged in.
  /auth/logout:
    post:
      operationId: logout
      tags:
        - auth
      summary: >-
        Logout
      description: >-
        Close login session, remove relevant cookies and redirect browser to provided URL.
      parameters:
        - $ref: '#/components/parameters/returnTo'
      responses:
        "302":
          description: redirects to `returnTo` url.
  /auth/tokens:
    get:
      tags:
        - auth-tokens
      summary: >-
        (BETA) List auth tokens created by current user
      operationId: list-auth-tokens
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenList'
    post:
      tags:
        - auth-tokens
      summary: >-
        (BETA) Create a new auth token for the current user
      operationId: create-auth-token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenCreateResponse'
  /auth/tokens/{authTokenId}:
    parameters:
      - $ref: '#/components/parameters/authTokenId'
    get:
      tags:
        - auth-tokens
      summary: >-
        (BETA) Get auth token information.
      operationId: get-auth-token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        "404":
          description: Not Found
    post:
      tags:
        - auth-tokens
      summary: >-
        (BETA) Update an auth token.
      operationId: update-auth-token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenUpdateRequest'
      responses:
        "200":
          description: Updated auth token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
    delete:
      tags:
        - auth-tokens
      summary: >-
        (BETA) Delete auth token.
      operationId: delete-auth-token
      responses:
        "204":
          description: The auth token has been deleted.
  /chargebee/sso:
    get:
      operationId: chargebee-sso
      tags:
        - chargebee
      parameters:
        - name: forwardUrl
          in: query
          schema:
            type: string
          required: false
          description: |
            Optional parameter: desired destination URL within Chargebee. See https://apidocs.chargebee.com/docs/api/portal_sessions#create_a_portal_session_forward_url for more details.
      summary: >-
        Single-signon for chargebee
      description: >-
        Builds URL to use in end-customer's browser session to open Chargebee iframe contents
      responses:
        "302":
          description: responds with Chargebee login URL with single-use token in the url.
  /cluster-price-plan:
    post:
      operationId: plan-cluster-price
      tags:
        - estimated-cluster-costs
      summary: >-
        (BETA) Estimate cluster costs.
      description: >-
        Estimate initial cluster costs: VMs, VPNs, IPs and other resources
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                addons:
                  $ref: "#/components/schemas/AddonsConfig"
                clouds:
                  type: array
                  items:
                    $ref: "#/components/schemas/CloudType"
                region:
                  $ref: "#/components/schemas/ClusterRegion"
                nodes:
                  type: array
                  items:
                    $ref: "#/components/schemas/Node"
                  description: Initial nodes of this cluster. Both masters and workers
                network:
                  $ref: '#/components/schemas/Network'
                  description: Cluster network configuration.
      responses:
        "200":
          description: List of prices per cloud, per component.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCostEstimate'
  /credentials:
    get:
      operationId: list-cloud-credentials
      tags:
        - cloud-credentials
      summary: >-
        List cloud credentials.
      description: >-
        List available cloud credentials of user's organization.
      responses:
        "200":
          description: List of cloud credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsList'
    post:
      operationId: create-cloud-credentials
      tags:
        - cloud-credentials
      summary: >-
        Create cloud credentials.
      description: >-
        Create new cloud credentials entry for user's organization.
      requestBody:
        required: true
        description: Specification of new cloud credentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentials'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentials'
  /credentials/{credentialsId}:
    parameters:
      - $ref: '#/components/parameters/credentialsId'
    get:
      operationId: get-cloud-credentials
      tags:
        - cloud-credentials
      summary: >-
        Get cloud credentials.
      description: >-
        Get an item of cloud credentials.
      responses:
        "200":
          description: Item of cloud credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentials'
    delete:
      tags:
        - cloud-credentials
      summary: Delete cloud credentials.
      description: Delete an item of cloud credentials.
      operationId: delete-cloud-credentials
      responses:
        "204":
          description: The resource has been deleted.
  /kubernetes/external-clusters:
    get:
      operationId: list-external-clusters
      tags:
        - external-kubernetes
      summary: >-
        List external clusters
      description: >-
        TODO
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalClustersList'
          description:
    post:
      operationId: register-external-cluster
      tags:
        - external-kubernetes
      summary: >-
        Register external cluster
      description: >-
        TODO
      requestBody:
        required: true
        description: Cluster to be registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalCluster'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalCluster'
          description:
  /gslb:
    post:
      operationId: create-or-update-gslb
      tags:
        - gslb
      summary: >-
        (BETA) Create or update GSLB record.
      description: >-
        Creates a GSLB record for cluster service load balancers. If a record already exists for this service, it updates the record.
      requestBody:
        required: true
        description: Specification of new GSLB record.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GSLBRequest'
      responses:
        "200":
          description: The resource was create or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GSLBResponse'
    delete:
      operationId: delete-gslb
      tags:
        - gslb
      summary: >-
        (BETA) Delete GSLB record.
      description: >-
        Deletes a GSLB record for cluster service load balancer.
      requestBody:
        required: true
        description: Specification of GSLB record to delete.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GSLBDeleteRequest'
      responses:
        "204":
          description: GSLB was deleted
  /inventory/instance-types:
    get:
      operationId: list-instance-types
      tags:
        - inventory
      summary: (BETA) List instance types.
      description: Lists instance types. The list can be filtered to narrow down your search.
      parameters:
        - name: providers
          in: query
          schema:
            type: array
            items:
              type: string
          description: |
            Optional parameter to filter results based on the provider.
            You can choose multiple providers from these available: `aws`, `azure`, `do`, `gcp`.
        - name: regions
          in: query
          schema:
            type: array
            items:
              type: string
          description: |
            Optional parameter to filter results based on the instance type region.
            Regions names are provider specific.
            Please consult the documentation of individual providers for possible values.
        - name: instanceTypes
          in: query
          schema:
            type: array
            items:
              type: string
          description: |
            Optional paramter to filter results based on the instance type name.
            Instance type names are provider specific.
            Please consult the documentation of individual providers for possible values.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceTypesResponse'
  /kubernetes/operations/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        description: ID of the operation to get.
    get:
      operationId: get-operation
      tags:
        - operations
      summary: (BETA) Get operation by ID.
      description: Gets an operation by it's ID. Can be used to track the lifecycle of long-running operations.
      responses:
        "200":
          description: Operation object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "404":
          description: Operation not found.
  /kubernetes/clusters/{clusterId}/nodes:
    post:
      parameters:
        - $ref: '#/components/parameters/clusterId'
      operationId: add-cluster-node
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) single operation: add cluster node
      description: |
        Adds single node to cluster. Starts a long-running operation.

        The operation might result in an error. List of AWS operation errors:

        | Reason | Details |
        | --- | --- |
        | `bid_price_too_low` | Spot request price is too low. Increase the price. |
        | `max_spot_instance_count_exceeded` | Max spot instance count for the requested instance type exceeded. Choose another instance type. |
        | `insufficient_capacity` | Insufficient instance capacity. There is no Spot capacity available that matches your request. Choose another instance type. |
        | `quota_exceeded_{resource}` | Quota exceeded. Cannot continue without user interaction. Refer to the official AWS [documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html#api-error-codes-table-client) to see the possible resources. |
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        "201":
          description: Operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNodeResult'
    get:
      operationId: get-cluster-nodes
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) List cluster nodes
      description: >-
        Lists nodes in the cluster (workers+masters).
      parameters:
        - $ref: '#/components/parameters/clusterId'
      responses:
        "200":
          description: Node list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeList'
  /kubernetes/clusters/{clusterId}/nodes/{nodeId}:
    delete:
      parameters:
        - $ref: '#/components/parameters/clusterId'
        - name: nodeId
          in: path
          schema:
            type: string
          required: true
          description: The id of node to be deleted.
      operationId: delete-cluster-node
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) single operation: delete cluster node
      description: >-
        Deletes single node to cluster. Starts a long-running operation
      responses:
        "201":
          description: Operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNodeResult'
    get:
      operationId: get-cluster-node
      tags:
        - kubernetes-cluster
      summary: (BETA) Get cluster node by ID.
      description: Get the details of a cluster node by ID.
      parameters:
        - $ref: '#/components/parameters/clusterId'
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
          description: The id of node.
      responses:
        "200":
          description: Node object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "404":
          description: Node not found
  /kubernetes/clusters/{clusterId}/nodes/{nodeId}/interrupt:
    post:
      parameters:
        - $ref: '#/components/parameters/clusterId'
        - name: nodeId
          in: path
          schema:
            type: string
          required: true
          description: The id of node to be interrupted
      operationId: interrupt-cluster-node
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Simulates a spot instance interruption on a given node
      description: >-
        Calling this API is identical to receiving an interrupt signal from the cloud: workloads will be drained from the node, and node cloud resources will be deleted after that. This is different from simply deleting a node, as drain has a cloud specific timeout (e.g. 2 minutes on AWS or 30seconds on GCP), after which virtual machine will be forcefully deleted regardless if draining succeeded or not.
      responses:
        "204":
          description: Operation received
  /kubernetes/clusters/{clusterId}/policies:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      operationId: get-policies
      tags:
        - cluster-policies
      summary: >-
        (BETA) Get cluster policies configuration
      description: >-
        Gets policies configuration for the target cluster
      responses:
        "200":
          description: List of policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesConfig'
    put:
      operationId: upsert-policies
      tags:
        - cluster-policies
      summary: >-
        (BETA) Upsert policies
      description: >-
        Upserts policies modifying cluster's behavior to run workloads.
      requestBody:
        required: true
        description: List of policies to be modified/created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesConfig'
      responses:
        "200":
          description: Policies were successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesConfig'
        "400":
          description: Bad request
  /kubernetes/clusters:
    get:
      parameters:
        - name: credentialsId
          in: query
          schema:
            type: array
            items:
              type: string
          required: false
          description: |
            Optional parameter to query for clusters which are using the particular credentials.
            Provide as repeated parameter in case of multiple arguments, e.g. `?credentialsId=123&credentialsId=456`.
            Cluster will be included in the list if it's using any of the provided credentials.
      tags:
        - kubernetes-cluster
      summary: >-
        List clusters
      description: >-
        List clusters
      operationId: list-kubernetes-clusters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterList'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        Create new cluster
      description: Initiates the creation of a new Kubernetes cluster.
      operationId: create-new-cluster
      requestBody:
        required: true
        description: Specification of new cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCluster'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
  /kubernetes/clusters/{clusterId}:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      tags:
        - kubernetes-cluster
      summary: >-
        Get cluster information
      description: Get cluster information.
      operationId: get-cluster
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        "404":
          description: Not Found
    delete:
      tags:
        - kubernetes-cluster
      summary: >-
        Delete cluster
      description: Delete cast cluster.
      operationId: delete-cluster
      responses:
        "204":
          description: The resource has been deleted.
  /kubernetes/clusters/{clusterId}/metrics:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Get cluster metrics
      description: Get cluster metrics of specific type.
      operationId: get-cluster-metrics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterMetrics"
        "404":
          description: Cluster not found
      parameters:
        - $ref: "#/components/parameters/MetricsType"
  /kubernetes/clusters/{clusterId}/feedbackevents:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Get cluster creation feedback events
      description: Get cluster creation feedback events which are generated during cluster creation.
      operationId: get-cluster-feedback-events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeedbackEventsList'
        "404":
          description: Not Found
  /kubernetes/clusters/{clusterId}/auditlog:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Get cluster audit log events
      description: "Get cluster audit log events: when the VM was added or deleted, cluster paused and so on"
      operationId: get-cluster-audit-log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterAuditLogEventsList'
        "404":
          description: Not Found
  /kubernetes/clusters/{clusterId}/health:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Get cluster health
      description: "Get cluster health including kubernetes, cilium, nodes health."
      operationId: get-cluster-health
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHealth'
        "404":
          description: Not Found
  /kubernetes/clusters/{clusterId}/kubeconfig:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      operationId: get-cluster-kubeconfig
      tags:
        - kubernetes-cluster
      summary: >-
        Get kubeconfig.
      description: >-
        Retrieves kubeconfig to access the specified kubernetes cluster.
      responses:
        "200":
          description: kubeconfig file
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: kubeconfig file does not exist (possible reason - control plane is not initialized yet).
  /kubernetes/clusters/{clusterId}/nodes:update:
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Update node list
      description: |
        Updates node list, adding/removing nodes as specified.
        'Add' list should contain definition of what nodes to add.
        'Delete' list should contain nodes ids.
        Any of these list can be empty.
      operationId: update-node-list
      parameters:
        - $ref: '#/components/parameters/clusterId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeUpdateOperation'
      responses:
        "200":
          description: Updated node list, including generated IDs of new nodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeList'
        "400":
          description: Node(s) with specified ID(s) are not found
  /kubernetes/clusters/{clusterId}/archive:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Archive cluster
      description: |
        Archives cluster. Archived cluster won't visible while listing clusters.
      operationId: archive-cluster
      responses:
        "200":
          description: Operation completed succesfully
        "400":
          description: Cluster is active and cannot be archived
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/pause:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Pause cluster
      description: |
        Pauses cluster. Can be used to reduce cloud operations
        cost by pausing the cluster, i.e. to avoid CI builders VM cost during
        non-working hours.
      operationId: pause-cluster
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseCluster'
      responses:
        "200":
          description: Operation completed succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        "400":
          description: Cluster is already paused
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/resume:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Resume cluster
      description: |
        Resumes (previously paused) cluster. Can be used to reduce cloud operations
        cost by pausing the cluster, i.e. to avoid CI builders VM cost during
        non-working hours.
      operationId: resume-cluster
      responses:
        "200":
          description: Operation completed succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        "400":
          description: Cluster is already running
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/addons:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      operationId: get-cluster-addons
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Get enabled cluster addons and their configuration (if any)
      description: >-
        Gets enabled addons and their configuration for the target cluster
      responses:
        "200":
          description: List of enabled/configured addons.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonsConfig'
        "404":
          description: Cluster was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: configure-cluster-addons
      tags:
        - kubernetes-cluster
        - not-implemented
      summary: >-
        (BETA) Configure cluster addons
      description: >-
        Configures cluster addons: enable, disable or configure selected addons.
      requestBody:
        required: true
        description: List of enabled/configured addons.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonsConfig'
      responses:
        "200":
          description: Addons configuration initiated, desired configuration is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonsConfig'
        "404":
          description: Addon type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Addon already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /kubernetes/clusters/{clusterId}/pause-reconcile:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Pause cluster reconcile
      description: |
        Pauses cluster reconcile. When reconcile is paused CAST AI platform does not managed provisioned cluster.
      operationId: pause-cluster-reconcile
      responses:
        "200":
          description: Operation completed succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/resume-reconcile:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Resume cluster reconcile
      description: |
        Resume cluster reconcile. When reconcile is resumed CAST AI platform manages provisioned cluster.
      operationId: resume-cluster-reconcile
      responses:
        "200":
          description: Operation completed succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/trigger-reconcile:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    post:
      tags:
        - kubernetes-cluster
      summary: >-
        (BETA) Trigger cluster reconcile
      description: |
        Trigger cluster reconcile schedules next reconcile to start sooner.
      operationId: trigger-cluster-reconcile
      responses:
        "200":
          description: Operation completed succesfully
        "404":
          description: Cluster was not found
  /kubernetes/clusters/{clusterId}/ingress-controller:
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      operationId: get-cluster-ingress-controller
      tags:
        - kubernetes
        - ingress
        - controller
      summary: >-
        (BETA) Get cluster ingress controller.
      description: >-
        Retrieves information about kubernetes cluster ingress controller.
      responses:
        "200":
          description: Description of ingress controller.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesIngressController'
        "404":
          description: Ingress controller not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /kubernetes/clusters/{clusterId}/nodes/{nodeId}/setup-ssh:
    parameters:
      - $ref: '#/components/parameters/clusterId'
      - name: nodeId
        in: path
        required: true
        schema:
          type: string
        description: The id of node.
    post:
      operationId: setup-node-ssh
      tags:
        - kubernetes
        - node
        - ssh
      summary: >-
        (BETA) Setup prerequisites to connect to node via SSH.
      description: >-
        Setup prerequisites to connect to node via SSH
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
                  description: Public authorized key ed25519 for node SSH connection.
              required:
                - publicKey
      responses:
        "200":
          description: Operation completed succesfully
  /kubernetes/clusters/{clusterId}/nodes/{nodeId}/close-ssh:
    parameters:
      - $ref: '#/components/parameters/clusterId'
      - name: nodeId
        in: path
        required: true
        schema:
          type: string
        description: The id of node.
    post:
      operationId: close-node-ssh
      tags:
        - kubernetes
        - node
        - ssh
      summary: >-
        (BETA) Close connect to node SSH.
      description: >-
        Close connection to node SSH.
      responses:
        "200":
          description: Operation completed succesfully
  /regions:
    get:
      operationId: list-regions
      tags:
        - regions
      summary: >-
        (BETA) List CAST AI regions.
      description: >-
        List of available CAST AI regions.
      responses:
        "200":
          description: List of available CAST AI regions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastRegionList'
  /report/usage/daily:
    get:
      operationId: get-usage-report
      tags:
        - report
        - usage
      summary: >-
        (BETA) Receive a report of resources usage.
      description: >-
        Get cloud resources usage report of user's organization for current month. Report consists of daily accumulations of resources used by the hour. For example if a cluster runs on 8 vCPUs - its daily usage will be 8 * 24 = 192 vCPU hours. Can be filtered by Cluster Id and/or points in time.
      parameters:
        - $ref: '#/components/parameters/filterClusterId'
        - $ref: '#/components/parameters/filterFromDate'
        - $ref: '#/components/parameters/filterToDate'
      responses:
        "200":
          description: Resource usage report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsageReport'
            text/csv:
              schema:
                type: string
  /me:
    get:
      operationId: current-user-profile
      tags:
        - users
      summary: >-
        Retrieve profile of current user
      description: >-
        Pulls full profile of current user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description:
    post:
      operationId: update-current-user-profile
      tags:
        - users
      summary: >-
        Update profile
      description: >-
        Updates profile of current user
      requestBody:
        required: true
        description: Cluster with updated fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description:
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    clusterId:
      in: path
      name: clusterId
      schema:
        type: string
      required: true
      description: The id of the cluster.
    addonName:
      in: path
      name: addonName
      schema:
        type: string
      required: true
      description: The addon name.
    credentialsId:
      in: path
      name: credentialsId
      schema:
        type: string
      required: true
      description: Credentials ID.
    authTokenId:
      in: path
      name: authTokenId
      schema:
        type: string
      required: true
      description: Auth token ID.
    returnTo:
      name: returnTo
      in: query
      schema:
        type: string
      description: URL to redirect browser to after operation completes
    limit:
      name: limit
      in: query
      description: A limit on the number of objects to be returned, between 1 and 500. Default is 10.
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 10
    cursor:
      name: cursor
      in: query
      description: >
        A cursor for use in pagination. This is a token that defines your place in the list. For instance, if you make a list request - you will receive nextCursor field in response metadata. Given that nextCursor field is not empty, it can be used as a cursor query parameter to get subsequent items. If nextCursor is empty - there are no more items to retrieve.

      example: MTYwNDQwMzg4NzMxMTMzNzAwMA=====
      schema:
        type: string
    filterFromDate:
      name: fromDate
      in: query
      description: >
        Request filter parameter declaring point of time after which the results should be returned. Moment in time must be declared in RFC3339 format. https://tools.ietf.org/html/rfc3339

      example: 1985-04-12T23:20:50.52Z
      schema:
        type: string
    filterToDate:
      name: toDate
      in: query
      description: >
        Request filter parameter declaring point of time until which the results should be returned. Moment in time must be declared in RFC3339 format. https://tools.ietf.org/html/rfc3339

      example: 1985-04-12T23:20:50.52Z
      schema:
        type: string
    filterClusterId:
      name: clusterId
      in: query
      description: >
        Request filter parameter representing unique cluster ID. For instance, if you make a list request with clusterId filter parameter - returned results will represent the respective cluster. Cluster ID must be a valid UUID.

      example: e90523cc-1788-4363-8e07-7773c3174d4b
      schema:
        type: string
    MetricsType:
      name: metricsType
      in: query
      schema:
        type: string
        enum:
          - node_cpu_usage
          - node_memory_usage
          - cloud_cpu_usage
          - cloud_memory_usage
          - node_cpu_requests
          - node_memory_requests
          - cloud_cpu_requests
          - cloud_memory_requests
          - cloud_pods
      description: The type of metric to query
  schemas:
    FieldViolation:
      type: object
      properties:
        field:
          type: string
        description:
          type: string
      required:
        - field
        - description
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        fieldViolations:
          type: array
          description: in case the error is related to specific field, this list will contain
          items:
            $ref: '#/components/schemas/FieldViolation'
      required:
        - message
        - fieldViolations
    CloudType:
      type: string
      description: Cloud service provider type.
      enum:
        - gcp
        - aws
        - azure
        - do
      example: "aws"
    AuditInitiator:
      type: object
      properties:
        id:
          type: string
          description: user or system ID.
        name:
          type: string
          description: user or system name.
        email:
          type: string
          description: email of the user (absent for system calls)
      required:
        - id
        - name
    AuditEvent:
      type: object
      description: single event.
      properties:
        id:
          type: string
          description: audit event id
        eventType:
          type: string
          enum:
            - clusterCreated
            - clusterDeleted
          description: type of the performed operation
        time:
          type: string
          format: date-time
          description: Event creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
        initiatedBy:
          $ref: '#/components/schemas/AuditInitiator'
        event:
          type: object
          oneOf:
            - $ref: '#/components/schemas/AuditEventClusterCreated'
            - $ref: '#/components/schemas/AuditEventClusterDeleted'
      required:
        - eventType
        - initiatedBy
        - time
        - event
        - id
    AuditEventList:
      type: object
      properties:
        nextCursor:
          type: string
          description: >
            Cursor token to be used in future request cursor parameter to retrieve subsequent items from the dataset. Empty value of nextCursor field indicates that there are no further items to retrieve.

        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
      required:
        - items
        - nextCursor
    AuditEventClusterCreated:
      type: object
      properties:
        cluster:
          type: object
          description: snapshot of created cluster
    AuditEventClusterDeleted:
      type: object
      properties:
        cluster:
          type: object
          description: snapshot of deleted cluster
    AuthToken:
      type: object
      properties:
        id:
          type: string
          description: Auth token ID, generated at the time of creation
          readOnly: true
        name:
          type: string
          description: Name of the token. Must be unique among other active tokens for the current user.
        active:
          type: boolean
          description: Indicates whether this auth token is active.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Auth token creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          description: Auth token deletion UTC time in RFC3339 format.
          example: 2022-11-02T15:00:00Z
          readOnly: true
        lastUsedAt:
          type: string
          format: date-time
          description: Auth token last used UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
      required:
        - id
        - name
        - active
        - createdAt
    AuthTokenList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuthToken'
      required:
        - items
    AuthTokenUpdateRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether this auth token is active.
      required:
        - active
    AuthTokenCreateResponse:
      type: object
      properties:
        id:
          type: string
          description: Auth token ID, generated at the time of creation
          readOnly: true
        name:
          type: string
          description: Name of the token. Must be unique among other active tokens for the current user.
        active:
          type: boolean
          description: Indicates whether this auth token is active.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Auth token creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
        token:
          type: string
          description: Generated secret for this auth token (only shown once on creation)
          readOnly: true
      required:
        - id
        - name
        - active
        - createdAt
        - token
    UserSession:
      type: object
      properties:
        userId:
          type: string
          description: user id of logged in user.
          example: github|123456
        userHash:
          type: string
          description: user identity verification - salted SHA256 hash of user ID. For use with Intercom identity verification (see https://www.intercom.com/help/en/articles/183-enable-identity-verification-for-web-and-mobile)
          example: 85711c2dfd6c1b32b6c10bd49f452368197a2478b7a7b86c061356ebe0b65b38
        name:
          type: string
          description: full name of logged-in user, e.g. "John Doe". Managed by Auth0 and directly taken from login JWT claim "name".
          example: John Doe
        email:
          type: string
          description: corresponds to Auth0 JWT claim
          example: john@doe.eml
        nickname:
          type: string
          description: corresponds to Auth0 JWT claim
          example: heresjohnny
        picture:
          type: string
          description: corresponds to Auth0 JWT claim
          example: https://path-to-image/1.png
      required:
        - userId
        - userHash
        - name
        - email
        - nickname
        - picture
    EstimatedComponentTypePrice:
      type: object
      description: Price for all of the component type
      properties:
        unitCount:
          type: integer
          minimum: 1
        price:
          $ref: "#/components/schemas/EstimatedPriceAmount"
    EstimatedComponentPrice:
      type: object
      description: Price for all of the components instances. Contains dependencies breakdown
      properties:
        id:
          type: string
          description: component's string id, e.g. "vpn", "master", "worker" and so on
        name:
          type: string
          description: human-readable component's name
        unitCount:
          type: integer
          minimum: 1
        unitPrice:
          $ref: "#/components/schemas/EstimatedPriceAmount"
        fullPrice:
          $ref: "#/components/schemas/EstimatedPriceAmount"
        dependencies:
          $ref: "#/components/schemas/EstimatedComponentPrice"
      required:
        - id
        - name
        - unitCount
        - unitPrice
        - fullPrice
    EstimatedPriceAmount:
      type: object
      description: Estimated Price
      properties:
        currencyCode:
          type: string
          description: ISO-4217 currency code
        hourly:
          type: string
          description: Price per hour (e.g. "0.1234")
        monthly:
          type: string
          description: Price in dollars per month (30 days, e.g. "1.234")
    CostsPerTypeEstimate:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/EstimatedComponentTypePrice"
    CostsPerProviderEstimate:
      type: object
      properties:
        totalHourly:
          type: string
        totalMonthly:
          type: string
        details:
          type: array
          description: Break down by provider
          items:
            $ref: "#/components/schemas/EstimatedComponentPrice"
      required:
        - totalHourly
        - totalMonthl
    ClusterCostEstimate:
      type: object
      properties:
        perType:
          $ref: "#/components/schemas/CostsPerTypeEstimate"
        perCloud:
          $ref: "#/components/schemas/CostsPerProviderEstimate"
        total:
          $ref: "#/components/schemas/EstimatedPriceAmount"
      example:
        total:
          currencyCode: USD
          hourly: "0.369"
          monthly: "265.68"
        perType:
          masterVM:
            unitCount: 3
            price:
              currencyCode: USD
              hourly: "0.369"
              monthly: "265.68"
          vpn:
            id: vpn
            name: VPN Connections
            unitCount: 4
            price:
              currencyCode: USD
              hourly: "0.246"
              monthly: "177.12"
        perCloud:
          aws:
            totalMonthly: "6432.56"
            totalHourly: "5.30"
            details:
              - id: masterVM
                name: Medium master node (t3.medium)
                unitCount: 3
                unitPrice:
                  currencyCode: USD
                  hourly: "0.123"
                  monthly: "88.56"
                fullPrice:
                  currencyCode: USD
                  hourly: "0.369"
                  monthly: "265.68"
                dependencies:
                  - id: vm
                    name: Virtual Machine
                    unitCount: 3
                    unitPrice:
                      currencyCode: USD
                      hourly: "0.123"
                      monthly: "88.56"
                    fullPrice:
                      currencyCode: USD
                      hourly: "0.369"
                      monthly: "265.68"
                  - id: disk
                    name: BlockStorage
                    unitCount: 3
                    unitPrice:
                      currencyCode: USD
                      hourly: "0.123"
                      monthly: "88.56"
                    fullPrice:
                      currencyCode: USD
                      hourly: "0.369"
                      monthly: "265.68"
              - id: vpn
                name: VPN Connections
                unitCount: 2
                unitPrice:
                  currencyCode: USD
                  hourly: "0.123"
                  monthly: "88.56"
                fullPrice:
                  currencyCode: USD
                  hourly: "0.246"
                  monthly: "177.12"
          gcp:
            totalHourly: "0.369"
            totalMonthly: "265.68"
            details:
              - id: vpn
                name: Gateway Type
                unitCount: 2
                unitPrice:
                  currencyCode: USD
                  hourly: "0.123"
                  monthly: "88.56"
                fullPrice:
                  currencyCode: USD
                  hourly: "0.246"
                  monthly: "177.12"
          castai:
            totalHourly: "0"
            totalMonthly: "0"
    CloudCredentialsReservation:
      type: object
      description: Defines object that uses this credentials.
      properties:
        id:
          type: string
          description: Id of the object which uses credentials.
        name:
          type: string
          description: Name of the object which uses credentials.
      required:
        - id
        - name
    CloudCredentials:
      type: object
      description: Cloud credentials item.
      properties:
        id:
          type: string
          readOnly: true
          description: Id of cloud credentials item.
        credentials:
          type: string
          writeOnly: true
          description: Actual credentials data of given cloud.
        name:
          type: string
          description: Name of cloud credentials object.
        cloud:
          type: string
          description: Cloud type that these credentials represent.
        freeTrial:
          type: boolean
          readOnly: true
          description: Whether credentials are under free trial.
        expiresAt:
          type: string
          format: date-time
          readOnly: true
          description: Credential expiration UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
        usedBy:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CloudCredentialsReservation'
      required:
        - id
        - name
        - cloud
        - credentials
    CloudCredentialsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CloudCredentials'
      required:
        - items
    ExternalClustersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExternalCluster'
      required:
        - items
    ExternalCluster:
      type: object
      properties:
        id:
          type: string
          description: Cluster ID, generated at the time of creation
          readOnly: true
        name:
          type: string
          description: Name of this infrastructure object. Needs to be unique per organization.
      required:
        - id
        - name
    GSLBRequest:
      type: object
      properties:
        clusterId:
          type: string
          description: ID of the cluster.
          example: 06a6fe03-fc9c-4d99-a0a4-373e87efe4b8
        serviceName:
          type: string
          description: Name of the exposed LoadBalancer type service.
          example: nginx
        serviceNamespace:
          type: string
          description: Namespace where the exposed LoadBalancer type service resides.
          example: default
        hosts:
          type: array
          items:
            type: string
            description: Hostname or IP address of a single load balancer.
          description: Array of all cloud load balancer hostnames and IP addresses which should be globally load balanced.
          example:
            - 80.1.1.23
            - cloud.loadbalancer.com
      required:
        - clusterId
        - serviceName
        - serviceNamespace
        - hosts
    GSLBResponse:
      type: object
      properties:
        dns:
          type: string
          description: Hostname of the GSLB.
          example: nginx.default.06a6fe03-fc9c-4d99-a0a4-373e87efe4b8.onmulti.cloud
      required:
        - dns
    GSLBDeleteRequest:
      type: object
      properties:
        clusterId:
          type: string
          description: ID of the cluster.
          example: 06a6fe03-fc9c-4d99-a0a4-373e87efe4b8
        serviceName:
          type: string
          description: Name of the exposed LoadBalancer type service.
          example: nginx
        serviceNamespace:
          type: string
          description: Namespace where the exposed LoadBalancer type service resides.
          example: default
      required:
        - clusterId
        - serviceName
        - serviceNamespace
    InstanceTypesResponse:
      type: object
      properties:
        instanceTypes:
          type: array
          items:
            $ref: '#/components/schemas/InstanceType'
          description: List of instance types.
      required:
        - instanceTypes
    InstanceType:
      type: object
      properties:
        id:
          type: string
          description: ID of the instance type object.
          example: 336f509e-0035-42cf-ae41-8cbb5352bb11
        provider:
          type: string
          description: Short provider name.
          example: aws
        region:
          type: string
          description: Region name. This value is provider specific.
          example: eu-central-1
        instanceType:
          type: string
          description: Instance type name.
          example: t3a.medium
        vcpu:
          type: integer
          description: Number of VCPU cores.
          example: 2
        ram:
          type: integer
          description: Number of available memory in megabytes.
          example: 4096
        price:
          type: string
          description: The price of the instance type. Value is in $/hour.
          example: 0.0432
        createdAt:
          type: string
          format: date-time
          description: Instance type creation in our system timestamp in RFC3339Nano format.
          example: 2020-12-15T15:25:44.887899Z
        updatedAt:
          type: string
          format: date-time
          description: Instance type last update in our system timestamp in RFC3339Nano format.
          example: 2020-12-15T15:25:44.887899Z
      required:
        - id
        - provider
        - region
        - instanceType
        - vcpu
        - ram
        - price
        - createdAt
        - updatedAt
    OperationResponse:
      type: object
      properties:
        id:
          type: string
          description: ID of the operation.
          example: 06a6fe03-fc9c-4d99-a0a4-373e87efe4b8
        done:
          type: boolean
          description: >-
            Indicates whether the operation is done. If 'true', the operation has finished. If 'false', the operation is still in progress.
          example: true
        createdAt:
          type: string
          format: date-time
          description: Operation creation time in RFC3339Nano format.
          example: 2020-12-15T15:25:44.887899Z
        finishedAt:
          type: string
          format: date-time
          description: Operation finishe time in RFC3339Nano format.
          example: 2020-12-15T15:26:44.887899Z
        error:
          type: object
          description: >-
            Error details for the operation. Only populated when the operation is done and has failed. If operation has completed successfully, the error will not be set.
          properties:
            reason:
              type: string
              description: >-
                Reason is an operation specific failure code. Refer to documentation of the endpoint which generated the long-running operation about possible outcomes. Common error reasons:

                * `internal_error`: An unknown error occurred. Retry the operation.
              example: quota_reached
            details:
              type: string
              description: Human readable caption text describing the error reason.
              example: Resource quota was reached. Cannot continue without user interaction.
          required:
            - reason
            - details
      required:
        - id
        - done
        - createdAt
    AddNodeResult:
      type: object
      description: Add node operation result
      properties:
        operationId:
          type: string
          description: id for long running operation
        nodeId:
          type: string
          description: id of the created note
      required:
        - operationId
        - nodeId
    DeleteNodeResult:
      type: object
      description: Delete node operation result
      properties:
        operationId:
          type: string
          description: id for long running operation
      required:
        - operationId
    Headroom:
      type: object
      description: Additional headroom based on cluster's total available capacity.
      properties:
        cpuPercentage:
          description: Defines percentage of additional CPU capacity to be added
          type: integer
          default: 10
          minimum: 0
          maximum: 100
          example: 10
        memoryPercentage:
          description: Defines percentage of additional memory capacity to be added
          type: integer
          default: 10
          minimum: 0
          maximum: 100
          example: 10
      required:
        - cpuPercentage
        - memoryPercentage
    PoliciesConfig:
      type: object
      properties:
        enabled:
          description: Enable/disable all policies
          type: boolean
          default: false
        unschedulablePods:
          $ref: '#/components/schemas/UnschedulablePodsPolicy'
        nodeDownscaler:
          $ref: '#/components/schemas/NodeDownscaler'
        clusterLimits:
          $ref: '#/components/schemas/ClusterLimitsPolicy'
        spotInstances:
          $ref: '#/components/schemas/SpotInstances'
      required:
        - enabled
        - unschedulablePods
        - spotInstances
        - clusterLimits
    ClusterLimitsPolicy:
      type: object
      description: Defines minimum and maximum amount of vCPUs for cluster's worker nodes.
      properties:
        enabled:
          description: Enable/disable cluster size limits policy.
          type: boolean
          default: false
        cpu:
          $ref: '#/components/schemas/ClusterLimitsCpu'
      required:
        - enabled
        - cpu
    ClusterLimitsCpu:
      type: object
      description: Defines the minimum and maximum amount of vCPUs for cluster's worker nodes.
      properties:
        minCores:
          description: Defines the minimum allowed amount of vCPUs in the whole cluster.
          type: integer
          default: 1
          format: int64
          minimum: 1
          maximum: 20
          example: 1
        maxCores:
          description: Defines the maximum allowed amount of vCPUs in the whole cluster.
          type: integer
          default: 20
          format: int64
          minimum: 2
          maximum: 1000
          example: 20
      required:
        - enabled
        - minCores
        - maxCores
    NodeDownscalerEmptyNodes:
      type: object
      properties:
        enabled:
          description: Defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
          type: boolean
          default: false
    NodeDownscaler:
      type: object
      description: Node Downscaler defines policies for removing nodes based on the configured conditions.
      properties:
        emptyNodes:
          $ref: '#/components/schemas/NodeDownscalerEmptyNodes'
      required:
        - emtpyNodes
    UnschedulablePodsPolicy:
      type: object
      description: Policy defining autoscaler's behavior when unscedulable pods were detected.
      properties:
        enabled:
          description: Enable/disable unschedulable pods detection policy.
          type: boolean
          default: false
        headroom:
          $ref: '#/components/schemas/Headroom'
      required:
        - enabled
        - headroom
    SpotInstances:
      type: object
      description: Policy defining whether autoscaler can use spot instances for provisioning additional workloads.
      properties:
        enabled:
          description: Enable/disable spot instances policy.
          type: boolean
          default: false
        clouds:
          description: Enable/disable spot instances policy.
          type: array
          items:
            type: string
            default: []
            enum:
              - aws
              - gcp
              - azure
            example: aws
      required:
        - enabled
        - clouds
    ClusterMetrics:
      type: object
      properties:
        status:
          type: string
          description: Whether the metrics query was successful
          enum:
            - success
            - error
        errorType:
          type: string
          description: Only set if status is "error". The data field may still hold additional data.
        error:
          type: string
          description: Only set if status is "error". The error message.
        warnings:
          type: array
          description: Only if there were warnings while executing the request. There will still be data in the data field.
          items:
            type: string
        data:
          type: object
          description: The query result data.
          properties:
            resultType:
              type: string
              description: The format of the result data.
              enum:
                - matrix
                - vector
                - scalar
                - string
            result:
              type: array
              items:
                type: object
              description: Sample data array based. Format is based on the result type. Check the Prometheus API docs.
              externalDocs:
                url: https://prometheus.io/docs/prometheus/latest/querying/api/#expression-query-result-formats
    CertManagerConfig:
      type: object
      description: Cert-Manager
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: true
      required:
        - enabled
    DashboardConfig:
      type: object
      description: Kubernetes dashboard
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: true
      required:
        - enabled
    ElasticLoggingConfig:
      type: object
      description: Elastic Cloud on Kubernetes + Logging setup
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: true
        config:
          type: object
          properties:
            haMode:
              type: string
              enum:
                - none
      required:
        - enabled
    GrafanaConfig:
      type: object
      description: Grafana -- UI for Prometheus
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: true
      required:
        - enabled
    KedaConfig:
      type: object
      description: KEDA (keda.sh) an event-based k8s resources autoscaler
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: false
      required:
        - enabled
    NginxIngressConfig:
      type: object
      description: Nginx-based ingress controller
      properties:
        enabled:
          type: boolean
          description: Whether this addon is enabled
          default: true
      required:
        - enabled
    AddonsConfig:
      type: object
      properties:
        certManager:
          $ref: '#/components/schemas/CertManagerConfig'
        dashboard:
          $ref: '#/components/schemas/DashboardConfig'
        elasticLogging:
          $ref: '#/components/schemas/ElasticLoggingConfig'
        grafana:
          $ref: '#/components/schemas/GrafanaConfig'
        keda:
          $ref: '#/components/schemas/KedaConfig'
        nginxIngress:
          $ref: '#/components/schemas/NginxIngressConfig'
    Network:
      type: object
      properties:
        vpn:
          $ref: '#/components/schemas/VpnConfig'
      required:
        - vpn
    VpnConfig:
      type: object
      properties:
        ipSec:
          $ref: '#/components/schemas/IpSecConfig'
        wireGuard:
          $ref: '#/components/schemas/WireGuardConfig'
    IpSecConfig:
      type: object
    WireGuardConfig:
      type: object
      properties:
        topology:
          type: string
          enum:
            - fullMesh
            - crossLocationMesh
      required:
        - topology
    CreateCluster:
      type: object
      properties:
        name:
          type: string
          description: Name of this infrastructure object. Needs to be unique per organization.
        region:
          type: string
          description: CAST AI region to create the cluster in.
        cloudCredentialsIDs:
          type: array
          description: Credentials ID list which determines the CSP configuration of this cluster.
          items:
            type: string
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
          description: Initial nodes of this cluster. Must contain final masters count.
        addons:
          $ref: '#/components/schemas/AddonsConfig'
        network:
          $ref: '#/components/schemas/Network'
          description: Cluster network configuration.
      required:
        - name
        - region
        - cloudCredentialsIDs
        - nodes
    KubernetesCluster:
      type: object
      properties:
        id:
          type: string
          description: Cluster ID, generated at the time of creation
          readOnly: true
        status:
          type: string
          description: Current status of the cluster
          readOnly: true
          enum:
            - creating
            - ready
            - warning
            - failed
            - deleting
            - deleted
            - pausing
            - paused
            - resuming
        reconcileMode:
          type: string
          enum:
            - enabled
            - paused
          readOnly: true
        name:
          type: string
          description: Name of this infrastructure object. Needs to be unique per organization.
        region:
          $ref: '#/components/schemas/ClusterRegion'
        cloudCredentialsIDs:
          type: array
          description: Credentials ID list which determines the CSP configuration of this cluster.
          items:
            type: string
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
          description: Cluster nodes.
        pausedNotes:
          type: string
          readOnly: true
          description: Optional notes added when pausing the cluster.
        addons:
          $ref: '#/components/schemas/AddonsConfig'
        network:
          $ref: '#/components/schemas/Network'
          description: Cluster network configuration.
        kubernetesVersion:
          type: string
          readOnly: true
          example: 1.19.7
          description: Cluster kubernetes version.
        createdAt:
          type: string
          format: date-time
          description: Cluster creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
        reconciledAt:
          type: string
          format: date-time
          description: Last cluster reconcile UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
        heartbeats:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/Heartbeat'
          example:
            prometheus:
              system: prometheus
              receivedAt: "2001-02-03T11:22:33Z"
            castadm:
              system: castadm
              receivedAt: "2002-03-04T22:33:44Z"
      required:
        - id
        - name
        - region
        - cloudCredentialsIDs
        - status
        - reconcileMode
        - nodes
    KubernetesClusterFeedbackEvent:
      type: object
      properties:
        id:
          type: string
          description: Cluster feedback event ID, generated at the time of creation.
          readOnly: true
          example: "9e75b56e-c1af-40d4-966f-7f48bfcc4211"
        message:
          type: string
          description: Message of this event.
          example: "[GCP] Virtual machine created, name=vm-xl-1"
        severity:
          description: Severity level.
          type: string
          enum:
            - info
            - error
          example: "info"
        createdAt:
          type: string
          format: date-time
          description: Event creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
      required:
        - id
        - message
        - severity
        - createdAt
    ClusterRegion:
      type: object
      description: CAST AI region used by cluster.
      properties:
        name:
          type: string
          description: CAST AI region name, e.g. `us-west`.
        displayName:
          type: string
          description: display name of the region, e.g. `US West ( California )`.
      required:
        - name
        - displayName
    NodeType:
      type: string
      example: worker
      enum:
        - master
        - worker
      description: |
        Specifies the node type.

        `master` hosts the Kubernetes control plane.

        `worker` is used to run workloads and supports autoscaling.
    NodeShape:
      type: string
      description: CAST AI shape defining VM template. Field is required unless `instanceType` is specified.
      example: large
      enum:
        - x-small
        - small
        - medium
        - large
        - x-large
        - 2x-large
    NodeState:
      type: object
      description: Kubernetes node state.
      properties:
        phase:
          type: string
          description: Current status of a node.
          example: ready
          readOnly: true
          enum:
            - unknown
            - pending
            - creating
            - ready
            - draining
            - deleting
            - deleted
    NodeSpotConfig:
      type: object
      description: Spot instance configuration.
      properties:
        isSpot:
          type: boolean
          default: false
          description: |
            Indicates whether the node should be spot/preemtive, suitable for fault-tolerant workloads.

            `true` if instance should be Spot (AWS), Preemtible (GCP), etc.

            `false` if the node should be stable on-demand.
          example: true
        price:
          type: string
          description: Max bid price (only applicable to AWS).
          example: "0.02"
      required:
        - isSpot
    Node:
      type: object
      description: Kubernetes node
      properties:
        id:
          type: string
          readOnly: true
          description: Node ID autogenerated at the time of node creation.
          example: 0aa598d4-f99e-48de-875f-819efcc702f6
        name:
          type: string
          readOnly: true
          description: Node name generated at the time of node creation.
          example: cluster-33e75b9f-aws-8ca9
        createdAt:
          type: string
          format: date-time
          description: Node creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
          readOnly: true
        role:
          $ref: '#/components/schemas/NodeType'
        shape:
          $ref: '#/components/schemas/NodeShape'
        instanceType:
          type: string
          description: Precise VM instance type for specific cloud. If specified, `shape` field is ignored.
          example: "t3.xlarge"
        cloud:
          $ref: '#/components/schemas/CloudType'
        state:
          $ref: '#/components/schemas/NodeState'
        spotConfig:
          $ref: '#/components/schemas/NodeSpotConfig'
        network:
          $ref: '#/components/schemas/NodeNetwork'
      required:
        - role
        - cloud
        - shape
        - instanceType
    NodeNetwork:
      type: object
      description: Kubernetes node network
      properties:
        publicIp:
          type: string
          description: node public IP
        privateIp:
          type: string
          description: node private IP
      required:
        - publicIp
        - privateIp
    DeletedNode:
      type: object
      description: Kubernetes node
      properties:
        id:
          type: string
          description: node ID autogenerated at the time of node creation
        drain_timeout:
          type: integer
          default: 600
          description: |
            specifies how long should drain be attempted (in seconds).
        force:
          type: boolean
          default: true
          description: when set to false, node deletion will be aborted if drain timeout expires.
      required:
        - id
    Heartbeat:
      type: object
      properties:
        system:
          type: string
          description: originating system name
        receivedAt:
          type: string
          format: date-time
          description: Timestamp of the last heartbeat from this system
          example: "2010-01-02T03:04:05Z"
    KubernetesClusterList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesCluster'
      required:
        - items
    KubernetesClusterFeedbackEventsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesClusterFeedbackEvent'
      required:
        - items
    ClusterHealth:
      type: object
      properties:
        kubernetes:
          $ref: '#/components/schemas/ClusterHealthKubernetes'
        cilium:
          $ref: '#/components/schemas/ClusterHealthCilium'
        nodes:
          $ref: '#/components/schemas/ClusterHealthNodes'
      required:
        - kubernetes
        - cilium
        - nodes
    ClusterHealthKubernetes:
      type: object
      properties:
        state:
          type: string
        msg:
          type: string
      required:
        - state
        - msg
    ClusterHealthCilium:
      type: object
      properties:
        state:
          type: string
        msg:
          type: string
      required:
        - state
        - msg
    ClusterHealthNodes:
      type: object
      properties:
        msg:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ClusterHealthNode'
      required:
        - msg
        - items
    ClusterHealthNode:
      type: object
      properties:
        name:
          type: string
        hostIp:
          type: string
        state:
          type: string
      required:
        - name
        - hostIp
        - state
    NodeList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Node'
      required:
        - items
    NodeUpdateOperation:
      type: object
      properties:
        add:
          type: array
          items:
            $ref: '#/components/schemas/Node'
        delete:
          type: array
          items:
            $ref: '#/components/schemas/DeletedNode'
    PauseCluster:
      type: object
      properties:
        notes:
          type: string
          maxLength: 2000
          description: Optional notes when pausing a cluster (2000 characters at most)
    KubernetesClusterAuditLogEventsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEvent'
      required:
        - items
    AuditLogEvent:
      type: object
      properties:
        id:
          type: string
          description: Audit Log Event ID, generated at the time of creation.
          readOnly: true
          example: "9e75b56e-c1af-40d4-966f-7f48bfcc4211"
        operation:
          type: string
          description: Operation.
          example: "vm_deleted"
        metadata:
          type: object
          description: Metadata about the event
        createdAt:
          type: string
          format: date-time
          description: Event creation UTC time in RFC3339 format.
          example: 2022-10-02T15:00:00Z
      required:
        - id
        - metadata
        - operation
        - createdAt
    KubernetesIngressController:
      type: object
      properties:
        loadBalancers:
          type: array
          description: Set of load balancers forwarding requests to the ingress.
          items:
            $ref: '#/components/schemas/IngressLoadBalancer'
        ports:
          description: Available ingress controller ports.
          type: array
          items:
            type: integer
      required:
        - loadBalancers
        - ports
    IngressLoadBalancer:
      type: object
      description: Ingress load balancer.
      properties:
        type:
          description: Type/origin of load balancer.
          example: "gslb"
          type: string
        address:
          description: Load balancer address.
          example: "1849464756.demo-cluster-7a1264f9.local.onmulti.cloud"
          type: string
      required:
        - type
        - address
    CastRegion:
      type: object
      description: CAST AI region.
      properties:
        name:
          type: string
          description: CAST AI region name, e.g. `us-west`.
        displayName:
          type: string
          description: display name of the region, e.g. `US West ( California )`.
        clouds:
          type: array
          description: List of available cloud providers in given CAST AI region.
          items:
            $ref: '#/components/schemas/Cloud'
      required:
        - name
        - displayName
        - clouds
    CastRegionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CastRegion'
      required:
        - items
    Cloud:
      type: object
      description: Cloud Provider.
      properties:
        name:
          type: string
          description: Cloud provider name.
      required:
        - name
    ResourceUsage:
      type: object
      properties:
        from:
          type: string
          description: start of usage time in RFC3339 format.
        to:
          type: string
          description: end of usage time in RFC3339 format.
        cpu:
          type: integer
          description: cpu hours used for given date.
        memory:
          type: integer
          description: memory (MB) hours used for given date.
      required:
        - from
        - to
        - cpu
        - memory
    ResourceUsageReport:
      type: object
      properties:
        fromDate:
          type: string
          description: reported usage has occurred after this date. RFC3339 format.
        toDate:
          type: string
          description: reported usage has occurred before this date. RFC3339 format.
        dates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceUsage'
      required:
        - fromDate
        - toDate
        - dates
    UserProfileSurvey:
      type: object
      properties:
        submitted:
          type: boolean
        companyName:
          type: string
          example: ACME co.
        monthlyCpuUsage:
          type: integer
          example: 489
        annualCloudBudget:
          type: integer
          description: current cloud spend in USD
          example: 5000
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
          description: internal username. globally unique
          example: heresjohnny
        name:
          type: string
          description: full name of logged-in user, e.g. "John Doe".
          example: John Doe
        email:
          type: string
          description: user email
          example: john@doe.eml
        survey:
          $ref: '#/components/schemas/UserProfileSurvey'
      required:
        - nickname
        - name
        - email
